Confirm Alert Context
•	Review SignalDetails in the alert payload:
o	Signal – which path fired:
	CA_then_Suspicious_Success
	CA_then_Graph_Activity
	CA_then_OAuth_Activity
o	Evidence – correlated times, IP changes, token-based sign-in flags, Graph operation names, OAuth permissions, etc.
•	Severity & Score
o	AlertSeverity and TotalRiskScore are already computed; use them to prioritize.
________________________________________
2️⃣ Validate Conditional Access (CA) Failure
•	Open SigninLogs around FailTime for the user:
o	Confirm ConditionalAccessStatus == failure or notApplied with non-zero ResultType.
o	Note policy name and failure reason to see which CA control was bypassed.
•	Compare FailIP / FailLocation to baseline user activity.
________________________________________
3️⃣ Investigate the Follow-on Signal
Perform only the branch(s) shown in SignalDetails:
•	A. Suspicious Success Sign-In
o	Check SuccessTime, SuccessIP, AuthMethods.
o	If IsTokenBased == true, verify whether refresh tokens or OAuth2 grants were expected.
o	Compare DeviceInfo to known user devices.
•	B. High-Risk Graph Activity
o	Look at OperationName, ActorApp, TargetInfo.
o	Verify the app (ActorAppId) is not in your approved/Trusted lists.
o	Correlate with mailbox or file access patterns.
•	C. OAuth / Service Principal Creation
o	Review PermissionsGranted and AppDetails.
o	Confirm whether a new service principal or consent event was authorized by the user or admin.
________________________________________
4️⃣ Baseline & Behavior Check
•	Compare against UserBaselines (if stored separately):
o	Typical IP count (TypicalIPs), common locations (CommonLocations), and common apps.
o	Check LastSeenBefore to see if the user is new or dormant.
________________________________________
5️⃣ Containment & Remediation
Severity-aligned actions (already suggested in Recommendations field):
•	Critical / High
o	Disable the user account or force password reset.
o	Revoke refresh tokens and active sessions (Revoke-AzureADUserAllRefreshToken or equivalent).
o	Block suspicious app IDs and IPs.
o	Escalate to incident response.
•	Medium
o	Force re-authentication and review Graph/OAuth actions with the user.
o	Validate whether permissions or app registrations were legitimate.
________________________________________
6️⃣ Documentation & Lessons Learned
•	Record timeline of CA failure, follow-on action, and containment.
•	Update allow-lists (TrustedAppIds, TrustedAppNames) if you confirm benign automation.
•	Feed confirmed malicious Graph ops back into threat-hunting or detection rules.

